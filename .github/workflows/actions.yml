name: Check formatting, Analyze, Test & Build
on:
  push:

jobs:

  gitRelease:
    name: Create git release for UAT app
    runs-on: ubuntu-latest
    environment: debug
    outputs:
      new_pubspec_version: "${{ steps.get_new_pubspec_version.outputs.next_pubspec_version }}"
    steps:
      - name: ‚¨áÔ∏è Checkout repository with tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: üè∑Ô∏èüß™ Get latest UAT release
        id: get_latest_uat_release
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          prefix: "release/uat/"
          fallback: 0.0.1
      - name: ‚öôÔ∏è Prepare semantic release configuration
        run: |
          mv .releaserc.uat.json .releaserc.json
      - name: üè∑Ô∏èüîÆ Get next UAT release semver version
        id: semantic_release_info
        uses: cycjimmy/semantic-release-action@v3.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          semantic_version: 19
      - name: üìù Calculate complete UAT version for next version
        id: get_new_pubspec_version
        run: |
          last_uat_release=$(echo "${{ steps.get_latest_uat_release.outputs.tag }}" | sed -E "s/release\/uat\/(.*)/\1/")
          next_pubspec_version=$(./scripts/semver.sh "$last_uat_release" "${{ steps.semantic_release_info.outputs.new_release_version }}")
          echo "next_pubspec_version=$next_pubspec_version" >> $GITHUB_OUTPUT
      - name: üè∑Ô∏è‚úçÔ∏è Create new UAT release tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "release/uat/${{ steps.get_new_pubspec_version.outputs.next_pubspec_version }}"
          message: "UAT release ${{ steps.get_new_pubspec_version.outputs.next_pubspec_version }}"
          github_token: ${{ secrets.TOKEN }}

  setup_flutter:
    name: Check formatting, Analyze, Test & Build
    runs-on: ubuntu-latest
    environment: debug
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v2
        with:
         flutter-version: '3.13.6'
         channel: 'stable'
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        # flutter version
        with:
          flutter-version: '3.13.6'
          channel: 'stable'

      # Get flutter dependencies.
      - run: flutter pub get

      # Check for any formatting issues in the code.
      - run: dart format --set-exit-if-changed --output none .

      # Statically analyze the Dart code for any errors.
      # - run: flutter analyze .

      # Run widget tests for our flutter project.
      - run: flutter test

      # Build apk.
      #- run: flutter build apk
      - name: üìù Edit pubspec version
        run: |
          sed -Ei "s/^version: (.*)/version: ${{ needs.gitRelease.outputs.new_pubspec_version }}/" app/pubspec.yaml

      - name: Decode Keystore
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'release.jks'
          fileDir: './android/keystore/'
          encodedString: ${{ secrets.KEYSTORE }}

      - name: Build
        run: flutter build apk --release 
        env:
          ANDROID_KEYSTORE_PATH: ${{ steps.write_file.outputs.filePath }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

      - name: Deploy
        uses: wzieba/Firebase-Distribution-Github-Action@v1.4.0
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          releaseNotes: "New release version"
          file: build/app/outputs/apk/release/app-release.apk
